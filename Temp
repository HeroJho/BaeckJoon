#include<iostream>
#include<list>
#include<algorithm>

using namespace std;

int g_Matrix[1001][1001] = { 0 };
bool g_Visited[1001] = { 0 };

int g_N, g_M;

void DFS(int iNum)
{
    g_Visited[iNum] = true;

    for (int i = 0; i < 1001; ++i)
    {
        if (g_Matrix[iNum][i] == 1 && g_Visited[i] == false)
        {
            DFS(i);
        }
    }
}

int Count_DFS()
{
    int iCount = 0;
    for (int i = 0; i < 1001; ++i)
    {
        for (int j = 0; j < 1001; ++j)
        {
            if (g_Matrix[i][j] == 1 && g_Visited[i] == false)
            {
                ++iCount;
                DFS(i);
            }
        }
    }

    return iCount;
}

int main()
{
    cin >> g_N >> g_M;
    for (int i = 0; i < g_M; ++i)
    {
        int iTemp1, iTemp2;
        cin >> iTemp1 >> iTemp2;
        g_Matrix[iTemp1][iTemp2] = 1;
        g_Matrix[iTemp2][iTemp1] = 1;
    }

    int iCount = Count_DFS();

    cout << iCount;

    return 0;
}
